<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home Page</title>

    <style>
        #homePages {
            display: flex;
            gap: 5px;
        }
        #homePages * {
            display: flex;
            justify-content: center;
            align-items: center;

            padding: 10px;
            width: 100px;
            height: 100px;
            background-color: #ddd;
        }
    </style>
    <style>
        #filter {
            display: flex;
        }

        #profiles {
            display: flex;
        }
        #profiles > div {
            background-color: #ddd;
            width: 200px;
            padding: 10px;
            margin: 10px;
        }

        .unvisible { display: none; }

        /* btn */
            /* promotion */
                .btn.promotion {
                    padding: 10px;
                    border-radius: 2px;
                    background-color: red;
                }
                .btn.promotion:hover {cursor: pointer;}

                div#promotion input {display: none;}
                div#promotion input:checked ~ label.promotion { background-color: green; }

            /* categorie */
                div#categories div {
                    padding: 10px;
                }
                div#categories div label {
                    padding: 10px;
                    border: 1px solid black;
                    border-radius: 5px;
                }
                div#categories div label:hover {cursor: pointer;}

                div#categories input {display: none;}
        div#categories input:checked ~ label.categorie { background-color: green; }
</style>
</head>
<body>
    <h2>Home Page</h2>
    <div id="homePages">
        <div id="order_0"></div>
        <div id="order_1"></div>
        <div id="order_2"></div>
        <div id="order_3"></div>
        <div id="order_4"></div>
        <div id="order_5"></div>
        <div id="order_6"></div>
    </div>


    <div id="profiles">
        <div id="empty" class="unvisible">
            <h2>Vazio, tente redefinir as pesquisas</h2>
        </div>
    </div>

    <script type="module">
        import Joi from 'https://cdn.jsdelivr.net/npm/joi@17.9.2/+esm'
        import validate from "/validator.js";

        class Observable {
            constructor() {
                this.observers = [];
            }
            subscribe(f) {
                this.observers.push(f);
            }
            unsubscribe(f) {
                this.observers = this.observers.filter(subscriber => subscriber !== f);
            }
            notify(data) {
                this.observers.forEach(observer => observer(data));
            }
        }


        class ApiHomePage {
            async apiGetAll() {
                return await fetch('/api/homePage/getAll')
            }
        }
        class HomePageFunctions extends ApiHomePage {
            constructor() { super(); this.data = [] }

            getTemplate(data) {
                return ` ${data.name} `
            }
            build(data) {
                this.clear()
                data.forEach(e => {
                    this.homePage.querySelector('div#order_'+e.order).innerHTML = this.getTemplate(e.profile)
                });
            }
            clear() { this.homePage.querySelectorAll('div').forEach(e => { e.innerHTML = '' }) }
        }
        class MainHomePage extends HomePageFunctions {
            constructor(homePage) {
                super()
                this.homePage = homePage

                this.buildHTML()
            }
            buildHTML() {
                this.apiGetAll()
                    .then(res => res.json())
                    .then(data => {
                        this.build(data)
                    })
                    .catch(err => { console.log(err) })
            }
        }

        class ApiProfiles {
            async apiGetAll() {
                return await fetch('/api/profile/getList')
            }
            async apiInsert(data) {
                return await fetch('/api/homePage/insert', {
                    method: 'POST',
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify(data)
                })
            }
        }
        class ProfileFunctions extends ApiProfiles {
            constructor () { super() }

            getTemplate(data) {
                return `<div id="_${data._id}"} > 
                        <input class="insertOrd" type="number" placeholder="order" max="6" min="0"><br>  
                        <input class="insertCard" type="button" value="Inserir"><br>

                        _id: ${data._id}, <br>
                        name: ${data.name}, <br>
                        picture: ${data.picture}, <br>
                        promotion: ${data.promotion}, <br>
                        uf: ${data.uf}, <br>
                        category: {<br>
                            &nbsp;&nbsp; type: ${data.category.type}, <br>
                            &nbsp;&nbsp; categories: ${data.category.categories} <br>
                        }
                    </div>`
            }
            build(data) {
                this.clear()
                data.forEach(e => {
                    let template = this.getTemplate(e)
                    this.profiles.insertAdjacentHTML('beforeend', template)

           
                    this.profiles.querySelector(`#_${e._id} input.insertCard`).addEventListener('click', evt => {
                        evt.preventDefault()
                        let order =  this.profiles.querySelector(`#_${e._id} input.insertOrd`).value || undefined
                        this.insert(e._id, order)
                    })
                });
            }

            clear() { this.profiles.innerHTML = '' }
        }
        class MainProfile extends ProfileFunctions {
            constructor(profiles, observer) {
                super()
                this.profiles = profiles
                this.observer = observer

                this.buildHTML()
            }
            buildHTML() {
                this.apiGetAll()
                    .then(res => res.json())
                    .then(data => {
                        this.build(data)
                    })
                    .catch(err => { console.log(err) })
            }

            insert(id, order) {
                this.apiInsert({
                    id: id,
                    order: order
                }).then(e => {
                    this.observer.notify()
                })
            }
        }


        const observerInsert = new Observable()
        
        const eHomePage = document.querySelector('#homePages')
        const eProfiles =document.querySelector('#profiles')
        const mainHomePage = new MainHomePage(eHomePage, observerInsert)
        const mainProfile = new MainProfile(eProfiles, observerInsert)

        // transferir subscrição pra dentro das classes 
        observerInsert.subscribe((msg) => mainHomePage.buildHTML())
        observerInsert.subscribe((msg) => mainProfile.buildHTML())
    </script>
</body>
</html>