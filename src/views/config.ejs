<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Config</title>
    <style>
        span.error {
            background-color: red;
        }
    </style>
</head>
<body>
    <h1>Config</h1>

    <form action="POST" id="form">
        <div id="picture">
            <label for="file">Picture: </label>
            <input type="file" name="picture">
        </div>
        <div id="name">
            <label for="name">Name: </label>
            <input type="text" name="name">
        </div>
        <div id="resume">
            <label for="resume">Resume: </label>
            <textarea name="resume" cols="30" rows="10"></textarea>
        </div>
        <div id="category">
            <select name="type" id="type">
                <option value="restaurante" selected>restaurante</option>
                <option value="hotel">hotel</option>
            </select>
            <div id="categories">
                <div id="sushi" class="item">
                    <label for="sushi">sushi</label>
                    <input type="checkbox" name="6469b487fe95b07f7414afed">
                </div>
                <div id="pastel" class="item">
                    <label for="pastel">pastel</label>
                    <input type="checkbox" name="6469b496fe95b07f7414afee">
                </div>
            </div>
        </div> 
        <div id="informations">
            <label for="informations">Informations: </label>
            <textarea name="informations" cols="30" rows="10"></textarea>
        </div>
        <div id="telephones">

            <div id="insert">
                <input type="button" value="telephone">
                <input type="button" value="whatsapp">
            </div>
        </div>
        <div id="local">
            <div id="cep">
                <label for="cep">Cep:</label>
                <input type="text" name="cep">
            </div>
            <div id="uf">
                <select name="uf">
                    <option value="" selected>None</option>
                    <option value="AC">AC</option>
                    <option value="AL">AL</option>
                    <option value="AM">AM</option>
                    <option value="AP">AP</option>
                    <option value="BA">BA</option>
                    <option value="CE">CE</option>
                    <option value="DF">DF</option>
                    <option value="ES">ES</option>
                    <option value="GO">GO</option>
                    <option value="MA">MA</option>
                    <option value="MG">MG</option>
                    <option value="MS">MS</option>
                    <option value="MT">MT</option>
                    <option value="PA">PA</option>
                    <option value="PB">PB</option>
                    <option value="PE">PE</option>
                    <option value="PI">PI</option>
                    <option value="PR">PR</option>
                    <option value="RJ">RJ</option>
                    <option value="RN">RN</option>
                    <option value="RO">RO</option>
                    <option value="RR">RR</option>
                    <option value="RS">RS</option>
                    <option value="SC">SC</option>
                    <option value="SE">SE</option>
                    <option value="SP">SP</option>
                    <option value="TO">TO</option>
                </select>
            </div>
            <div id="city">
                <label for="city">City:</label>
                <input type="text" name="city">
            </div>
            <div id="neighborhood">
                <label for="neighborhood">Neighborhood:</label>
                <input type="text" name="neighborhood">
            </div>
            <div id="street">
                <label for="street">Street:</label>
                <input type="text" name="street">
            </div>
            <div id="number" maxlength="10">
                <label for="numbert">Number:</label>
                <input type="text" name="number">
            </div>
            <div id="complement">
                <label for="complement">Complement:</label>
                <textarea name="complement" cols="30" rows="10"></textarea>
            </div>
        </div>
        <div id="movie">
            <label for="movie">Movie:</label>
            <input type="text" name="movie">
        </div>
        <div id="promotion">
            <select>
                <option value="" selected>None</option>
            </select>
        </div>

        <input id="send" type="button" value="send">
        
    </form>
    <script type="module" >
        import Joi from 'https://cdn.jsdelivr.net/npm/joi@17.9.2/+esm'
        import validate from '/validator.js'
        import f from '/functions.js'

        const form = document.querySelector('form#form')

        function getForm() {
            let data = {
                picture: form.querySelector('#picture input').value,
                name: form.querySelector('#name input').value,
                resume: form.querySelector('#resume textarea').value,
                category: {
                    type: form.querySelector('#category select').value
                },
                informations: form.querySelector('#informations textarea').value,
                telephones: {
                    telephone: [ ... form.querySelectorAll('div#telephones .telephone input[type="text"]') ].map(e => '+55'+e.value.replace(/\D/g, '')),
                    whatsapp: [ ... form.querySelectorAll('div#telephones .whatsapp input[type="text"]') ].map(e => '+55'+e.value.replace(/\D/g, ''))
                },
                local: {
                    cep: form.querySelector('#local #cep input').value.replace(/\D/g, ''),
                    uf: form.querySelector('#local #uf select').value,
                    city: form.querySelector('#local #city input').value,
                    neighborhood: form.querySelector('#local #neighborhood input').value,
                    street: form.querySelector('#local #street input').value,
                    number: form.querySelector('#local #number input').value,
                    complement: form.querySelector('#local #complement textarea').value,
                },
                movie: form.querySelector('#movie input').value,
                promotion: form.querySelector("#promotion select").value
            }
            if (data.category.type == 'restaurante') data.category['categories'] = [ ... form.querySelectorAll('#category #categories input:checked') ].map(e => e.getAttribute('name'))

            return f.removeEmptyValues(data)
        }
        
        class TelephoneFunctions {
            constructor(form) {
                form.querySelector('#insert [value="whatsapp"]').addEventListener('click', () => this.addWhatsapp())
                form.querySelector('#insert [value="telephone"]').addEventListener('click', () => this.addTelephone())

                this.form = form
                this.getTemp = (name) => `<div class="${name}">
                    <label for="${name}">${name.charAt(0).toUpperCase() + name.slice(1)}:</label>
                    <input type="text" maxlength="16">
                    <input type="button" name="delete" value="delete">
                </div>`
            }
            addTelephone() {
                this.form.insertAdjacentHTML("beforeend", this.getTemp('telephone'));
                let element = this.form.querySelectorAll('.telephone')[0]

                element.addEventListener('change', () => Erros.clear(element))
                element.addEventListener('keyup', () => this.mask(element.querySelector('input[type="text"]')))
                element.querySelector('input[name="delete"]').addEventListener('click', () => this.delete(element))
            }
            addWhatsapp() {
                this.form.insertAdjacentHTML("beforeend", this.getTemp('whatsapp'));
                let element = this.form.querySelectorAll('.whatsapp')[0]

                element.addEventListener('change', () => Erros.clear(element))
                element.addEventListener('keyup', () => this.mask(element.querySelector('input[type="text"]')))
                element.querySelector('input[name="delete"]').addEventListener('click', () => this.delete(element))
            }
            delete(element) { element.remove() }
            mask (e) {
                let t = e.value
                t = t.replace(/\D/g,"")
                t = t.replace(/(\d{0})(\d)/, "$1($2")
                t = t.replace(/(\d{2})(\d)/, "$1) $2")
                t = t.replace(/(\d{2})\)\s(\d{1})(\d)/, "$1) $2 $3")
                t = t.replace(/(\d{2})\)\s(\d{1})\s(\d{4})(\d)/, "$1) $2 $3-$4")
                t = t.replace(/(\(\d{2}\)\s\d{1}\s\d{4}\-\d{4})(\d)/, "$1")
                e.value = t
            }
        }
        class CategoryFunctions {
            constructor (form) {
                // this.form = form
                let type = form.querySelector('#type')
                let categories = form.querySelector('#categories')

                type.addEventListener('change', () => {
                    if (type.value == 'restaurante') categories.style.display = 'block'
                    else categories.style.display = 'none'
                })
            }
        }
        class LocalFunctions {
            constructor(form) {
                let input = form.querySelector('#cep input[type="text"]')
                input.addEventListener('keyup', () => this.mask(input))
            }
            mask (e) {
                let t = e.value
                t = t.replace(/\D/g,"")
                t = t.replace(/(\d{5})(\d)/, "$1-$2")
                t = t.replace(/(\d{5}\-\d{3})(\d)/, "$1")
                e.value = t
            }
        }
        
        class ErrorsFunctions {
            constructor(form) {
                this.form = form
                form.querySelectorAll('input, select, textarea').forEach(e => {
                    e.addEventListener('change', () => {
                        this.clear(e.parentElement)
                    })
                })
            }
            clear(element) {
                let err = element.querySelector('span.error')
                if (err) err.remove()
            }
            insert(path, msg) {
                var element = path[0] == 'telephones'
                    ? this.form.querySelectorAll(`#telephones .${path[1]}`)[path[2]]
                    : this.form.querySelector(`#${path.join(' #')}`)
                
                this.clear(element)
                element.insertAdjacentHTML("beforeend", `<span class="error">${msg}</span>`);
            }
        }

        const phoneFunctions = new TelephoneFunctions(form.querySelector('#telephones'))
        const categoryFunctions = new CategoryFunctions(form.querySelector('#category'))
        const localFunctions = new LocalFunctions(form.querySelector('#local'))
        
        const Erros = new ErrorsFunctions(form)

        // main
        document.querySelector('#form input[type=button]#send').addEventListener('click', (e) => {
            try {               
                const data = getForm()

                const {error, value} = validate.insert(data)
                if (error) throw error

                console.log('comunicando api')
                fetch('/api/profile/insert', {
                    method: 'POST',
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify(data)
                })
                    .then(res => res.json())  // converter para json
                    .then(json => console.log(json))
                    .catch(err => {
                        console.log(err)
                    })

            } catch (err) {
                if (err instanceof Joi.ValidationError) {
                    err.details.forEach(e => {
                        Erros.insert(e.path, e.message)
                    })
                } else { console.error(err) }
            }
        })
    </script>
    <script>
    </script>
</body>
</html>